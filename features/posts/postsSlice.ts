import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { Post } from './types';

// Interface for the Posts slice state
interface PostsState {
    posts: Post[];  // Array of all posts
    favorites: number[];    // Array of IDs of favorite posts
}

// Initial state for the Posts slice
const initialState: PostsState = {
    posts: [],  // Initially no posts
    favorites: [],  // Initially no favorite posts
};

// Slice for managing posts state
const postsSlice = createSlice({
    name: 'posts',   // Name of the slice
    initialState,   // Initial state
    reducers: {
        // Reducer for setting the posts array
        setPosts: (state, action: PayloadAction<Post[]>) => {
            state.posts = action.payload;
        },
        // Reducer for toggling favorite status of a post
        toggleFavorite: (state, action: PayloadAction<number>) => {
            const id = action.payload;
            if (state.favorites.includes(id)) {
                // If the post is already in favorites, remove it
                state.favorites = state.favorites.filter(fav => fav !== id);
            } else {
                // If the post is not in favorites, add it
                state.favorites.push(id);
            }
        },
    },
});

// Export the actions generated by createSlice
export const { setPosts, toggleFavorite } = postsSlice.actions;

// Export the reducer generated by createSlice as the default export
export default postsSlice.reducer;
